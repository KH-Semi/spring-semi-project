------------------------------- SEQUENCE -------------------------------

/* 게시판 종류 번호 */
CREATE SEQUENCE SEQ_BOARD_CODE_NO NOCACHE;

/* 회원 번호 */
CREATE SEQUENCE SEQ_MEMBER_NO NOCACHE;

/* 게시글 이미지 번호 */
CREATE SEQUENCE SEQ_IMG_NO NOCACHE;

/* 방명록 번호 */
CREATE SEQUENCE SEQ_GUEST_BOOK_NO NOCACHE;

/* 게시글 댓글 번호 */
CREATE SEQUENCE SEQ_BOARD_COMMENT_NO NOCACHE;

/* 인증키 구분 번호 */
CREATE SEQUENCE SEQ_KEY_NO NOCACHE;

/* 게시글 번호 */
CREATE SEQUENCE SEQ_BOARD_NO NOCACHE;

----------------------------- CREATE TABLE -----------------------------

ALTER TABLE MEMBER MODIFY MEMBER_PW NULL;
ALTER TABLE MEMBER MODIFY MEMBER_TEL NULL;


SELECT * FROM MEMBER;
-- 게시판 종류 테이블
CREATE TABLE "BOARD_TYPE" (
	"BOARD_CODE"	NUMBER		NOT NULL,
	"BOARD_NAME"	NVARCHAR2(20)	DEFAULT '익명게시판'	NOT NULL,
	"AUTHORITY"	NUMBER	DEFAULT 0	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

-- 게시판 종류 테이블 코멘트
COMMENT ON COLUMN "BOARD_TYPE"."BOARD_CODE" IS '게시판 종류 번호(PK)';
COMMENT ON COLUMN "BOARD_TYPE"."BOARD_NAME" IS '게시판 종류 이름';
COMMENT ON COLUMN "BOARD_TYPE"."AUTHORITY" IS '접근 권한(0: 전체, 1: 일촌)';
COMMENT ON COLUMN "BOARD_TYPE"."MEMBER_NO" IS '회원 번호(FK)';

-- 회원 테이블
CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_EMAIL"	NVARCHAR2(50)		NOT NULL,
	"MEMBER_PW"	NVARCHAR2(100)		NOT NULL,
	"MEMBER_NAME"	NVARCHAR2(10)		NOT NULL,
	"MEMBER_TEL"	CHAR(11)		NOT NULL,
	"MEMBER_ADDRESS"	NVARCHAR2(300)	DEFAULT NULL	NULL,
	"MEMBER_IMG"	VARCHAR2(300)		NULL,
	"MEMBER_INTRO"	NVARCHAR2(50)	DEFAULT '자기소개가 없습니다.'	NOT NULL,
	"HOME_TITLE"	NVARCHAR2(20)	DEFAULT '님의 미니홈피'	NOT NULL,
	"VISITOR_TOTAL"	NUMBER	DEFAULT 0	NOT NULL,
	"ENROLL_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"MEMBER_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"KAKAO_ACCESS_TOKEN"	VARCHAR2(300)		NULL
);
SELECT * FROM "MEMBER"
;

DELETE FROM "MEMBER"
WHERE MEMBER_NO = 7;

DELETE FROM "BOARD_TYPE"
WHERE MEMBER_NO = 7;

COMMIT;


COMMIT;
UPDATE MEMBER SET
MEMBER_IMG = NULL
WHERE MEMBER_NO = 1;


SELECT *FROM BOARD_TYPE bt _TYPE;
-- 회원 테이블 코멘트
COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원 번호(PK)';
COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일(ID)';
COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호(암호화)';
COMMENT ON COLUMN "MEMBER"."MEMBER_NAME" IS '회원 이름';
COMMENT ON COLUMN "MEMBER"."MEMBER_TEL" IS '회원 전화번호';
COMMENT ON COLUMN "MEMBER"."MEMBER_ADDRESS" IS '회원 주소';
COMMENT ON COLUMN "MEMBER"."MEMBER_IMG" IS '회원 이미지(대문 이미지)';
COMMENT ON COLUMN "MEMBER"."MEMBER_INTRO" IS '회원 소개글';
COMMENT ON COLUMN "MEMBER"."HOME_TITLE" IS '미니 홈피명';
COMMENT ON COLUMN "MEMBER"."VISITOR_TOTAL" IS '미니 홈피 총 방문자 수';
COMMENT ON COLUMN "MEMBER"."ENROLL_DATE" IS '회원가입일';
COMMENT ON COLUMN "MEMBER"."MEMBER_DEL_FL" IS '탈퇴 여부(Y/N)';
COMMENT ON COLUMN "MEMBER"."KAKAO_ACCESS_TOKEN" IS '카카오 액세스 토큰';

-- 게시글 좋아요 테이블
CREATE TABLE "BOARD_LIKE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

-- 게시글 좋아요 테이블 코멘트
COMMENT ON COLUMN "BOARD_LIKE"."MEMBER_NO" IS '회원 번호(PFK)';
COMMENT ON COLUMN "BOARD_LIKE"."BOARD_NO" IS '게시글 번호(PFK)';

-- 일촌평 테이블
CREATE TABLE "ILCHON_COMMENT" (
	"FROM_MEMBER_NO"	NUMBER		NOT NULL,
	"TO_MEMBER_NO"	NUMBER		NOT NULL,
	"ILCHON_COMMENT_CONTENT"	NVARCHAR2(30)		NOT NULL
);

-- 일촌평 테이블 코멘트
COMMENT ON COLUMN "ILCHON_COMMENT"."FROM_MEMBER_NO" IS '내 회원 번호(PFK)';
COMMENT ON COLUMN "ILCHON_COMMENT"."TO_MEMBER_NO" IS '상대 회원 번호(PFK)';
COMMENT ON COLUMN "ILCHON_COMMENT"."ILCHON_COMMENT_CONTENT" IS '일촌평 내용';

-- 프로필 테이블
CREATE TABLE "PROFILE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"IMG_PATH"	VARCHAR2(200)		NULL,
	"IMG_ORIGINAL_NAME"	NVARCHAR2(50)		NULL,
	"IMG_RENAME"	NVARCHAR2(50)		NULL,
	"PROFILE_CONTENT"	NVARCHAR2(150)		NULL
);

-- 프로필 테이블 코멘트
COMMENT ON COLUMN "PROFILE"."MEMBER_NO" IS '회원 번호(PK)';
COMMENT ON COLUMN "PROFILE"."IMG_PATH" IS '이미지 요청 경로';
COMMENT ON COLUMN "PROFILE"."IMG_ORIGINAL_NAME" IS '이미지 원본명';
COMMENT ON COLUMN "PROFILE"."IMG_RENAME" IS '이미지 변경명';
COMMENT ON COLUMN "PROFILE"."PROFILE_CONTENT" IS '프로필 내용';

-- 게시글 이미지 테이블
CREATE TABLE "BOARD_IMG" (
	"IMG_NO"	NUMBER		NOT NULL,
	"IMG_PATH"	VARCHAR2(200)		NOT NULL,
	"IMG_ORIGINAL_NAME"	NVARCHAR2(50)		NOT NULL,
	"IMG_RENAME"	NVARCHAR2(50)		NOT NULL,
	"IMG_ORDER"	NUMBER		NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

-- 게시글 이미지 테이블 코멘트
COMMENT ON COLUMN "BOARD_IMG"."IMG_NO" IS '이미지 번호(PK)';
COMMENT ON COLUMN "BOARD_IMG"."IMG_PATH" IS '이미지 요청 경로';
COMMENT ON COLUMN "BOARD_IMG"."IMG_ORIGINAL_NAME" IS '이미지 원본명';
COMMENT ON COLUMN "BOARD_IMG"."IMG_RENAME" IS '이미지 변경명';
COMMENT ON COLUMN "BOARD_IMG"."IMG_ORDER" IS '이미지 순서';
COMMENT ON COLUMN "BOARD_IMG"."BOARD_NO" IS '게시글 번호(FK)';

-- 방명록 테이블
CREATE TABLE "GUEST_BOOK" (
	"GUEST_BOOK_NO"	NUMBER		NOT NULL,
	"GUEST_BOOK_CONTENT"	NVARCHAR2(150)		NOT NULL,
	"GUEST_BOOK_WRITE_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"OWNER_NO"	NUMBER		NOT NULL,
	"VISITOR_NO"	NUMBER		NOT NULL
);

-- 방명록 테이블 코멘트
COMMENT ON COLUMN "GUEST_BOOK"."GUEST_BOOK_NO" IS '방명록 번호(PK)';
COMMENT ON COLUMN "GUEST_BOOK"."GUEST_BOOK_CONTENT" IS '방명록 내용';
COMMENT ON COLUMN "GUEST_BOOK"."GUEST_BOOK_WRITE_DATE" IS '방명록 작성일';
COMMENT ON COLUMN "GUEST_BOOK"."OWNER_NO" IS '홈피 주인 회원 번호(FK)';
COMMENT ON COLUMN "GUEST_BOOK"."VISITOR_NO" IS '방문 회원 번호(FK)';
COMMENT ON COLUMN "GUEST_BOOK"."SECRET" IS '일촌 여부'; -- 5/23 영민 추가
-- 플레이 리스트 테이블
CREATE TABLE "PLAYLIST" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"YOUTUBE_URL"	VARCHAR2(150)		NULL
);

-- 플레이 리스트 테이블 코멘트
COMMENT ON COLUMN "PLAYLIST"."MEMBER_NO" IS '회원 번호(PFK)';
COMMENT ON COLUMN "PLAYLIST"."YOUTUBE_URL" IS '유튜브 URL';

-- 게시글 댓글 테이블
CREATE TABLE "BOARD_COMMENT" (
	"BOARD_COMMENT_NO"	NUMBER		NOT NULL,
	"BOARD_COMMENT_CONTENT"	NVARCHAR2(2000)		NOT NULL,
	"BOARD_COMMENT_WRITE_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"BOARD_COMMENT_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PARENT_COMMENT_NO"	NUMBER	DEFAULT NULL	NULL
);

COMMIT;

-- 게시글 댓글 테이블 코멘트
COMMENT ON COLUMN "BOARD_COMMENT"."BOARD_COMMENT_NO" IS '댓글 번호(PK)';
COMMENT ON COLUMN "BOARD_COMMENT"."BOARD_COMMENT_CONTENT" IS '댓글 내용';
COMMENT ON COLUMN "BOARD_COMMENT"."BOARD_COMMENT_WRITE_DATE" IS '댓글 작성일';
COMMENT ON COLUMN "BOARD_COMMENT"."BOARD_COMMENT_DEL_FL" IS '댓글 삭제 여부(Y/N)';
COMMENT ON COLUMN "BOARD_COMMENT"."BOARD_NO" IS '게시글 번호(FK)';
COMMENT ON COLUMN "BOARD_COMMENT"."MEMBER_NO" IS '회원 번호(PK)';
COMMENT ON COLUMN "BOARD_COMMENT"."PARENT_COMMENT_NO" IS '부모 댓글 번호(FK)';

-- 인증 번호 테이블
CREATE TABLE "AUTH_KEY" (
	"KEY_NO"	NUMBER		NOT NULL,
	"EMAIL"	NVARCHAR2(50)		NOT NULL,
	"AUTH_KEY"	CHAR(6)		NOT NULL,
	"CREATE_TIME"	DATE	DEFAULT SYSDATE	NOT NULL
);

SELECT * FROM MEMBER;

-- 인증 번호 테이블 코멘트
COMMENT ON COLUMN "AUTH_KEY"."KEY_NO" IS '인증키 구분 번호(PK)';
COMMENT ON COLUMN "AUTH_KEY"."EMAIL" IS '인증 이메일';
COMMENT ON COLUMN "AUTH_KEY"."AUTH_KEY" IS '인증 번호';
COMMENT ON COLUMN "AUTH_KEY"."CREATE_TIME" IS '인증 번호 생성 시간';

-- 게시글 테이블
CREATE TABLE "BOARD" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"BOARD_TITLE"	NVARCHAR2(50)		NOT NULL,
	"BOARD_CONTENT"	NVARCHAR2(2000)		NOT NULL,
	"BOARD_WRITE_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"BOARD_UPDATE_DATE"	DATE		NULL,
	"READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"BOARD_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"BOARD_CODE"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

-- 게시글 테이블 코멘트
COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '게시글 번호(PK)';
COMMENT ON COLUMN "BOARD"."BOARD_TITLE" IS '게시글 제목';
COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '게시글 내용';
COMMENT ON COLUMN "BOARD"."BOARD_WRITE_DATE" IS '게시글 작성일';
COMMENT ON COLUMN "BOARD"."BOARD_UPDATE_DATE" IS '게시글 수정일';
COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '조회수';
COMMENT ON COLUMN "BOARD"."BOARD_DEL_FL" IS '게시글 삭제 여부(Y/N)';
COMMENT ON COLUMN "BOARD"."BOARD_CODE" IS '게시판 종류 번호(FK)';
COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '회원 번호(PK)';

-- 일촌 테이블
CREATE TABLE "ILCHON" (
	"FROM_MEMBER_NO"	NUMBER		NOT NULL,
	"TO_MEMBER_NO"	NUMBER		NOT NULL,
	"FROM_NICKNAME"	NVARCHAR2(8)		NOT NULL,
	"TO_NICKNAME"	NVARCHAR2(8)		NOT NULL,
	"IS_ILCHON"	CHAR(1)	DEFAULT 'N'	NOT NULL
);

--투데이 테이블 생성 5/23 영민 
CREATE TABLE TODAY (
    HOME_NO     NUMBER NOT NULL,
    VISIT_NO    NUMBER NOT NULL,
    VISIT_DATE  DATE DEFAULT TRUNC(SYSDATE) NOT NULL
);
COMMENT ON COLUMN "TODAY"."HOME_NO" IS '홍피주인회원번호';
COMMENT ON COLUMN "TODAY"."VISIT_NO" IS '방문자회원번호';
COMMENT ON COLUMN "TODAY"."VISIT_DATE" IS '회원방문일자';

-- 일촌 테이블 코멘트
COMMENT ON COLUMN "ILCHON"."FROM_MEMBER_NO" IS '내 회원 번호(PFK)';
COMMENT ON COLUMN "ILCHON"."TO_MEMBER_NO" IS '상대 회원 번호(PFK)';
COMMENT ON COLUMN "ILCHON"."FROM_NICKNAME" IS '내 일촌명';
COMMENT ON COLUMN "ILCHON"."TO_NICKNAME" IS '상대 일촌명';
COMMENT ON COLUMN "ILCHON"."IS_ILCHON" IS '일촌 여부';

CREATE TABLE "TODAY" (
	"HOME_NO" NUMBER NOT NULL,
	"VISIT_NO" NUMBER NULL,
	"VISIT_DATE" DATE DEFAULT SYSDATE NOT NULL
);


-------------------------------------- PK --------------------------------------

ALTER TABLE TODAY ADD CONSTRAINT TODAY_PK 
    PRIMARY KEY (HOME_NO, VISIT_NO, VISIT_DATE); -- today 테이블 3개가 동시에 복합키


SELECT * FROM GUEST_BOOK;
ALTER TABLE GUEST_BOOK -- 5/23 영민 방명록 테이블에 비밀글 관련 컬럼 추가
ADD SECRET NUMBER(1) DEFAULT 0 CHECK(SECRET IN (0,1)) NOT NULL; 

ALTER TABLE MEMBER DROP COLUMN VISITOR_TOTAL; -- 5/23 영민 따로 테이블을 today 테이블을 하나 만들꺼임
										      -- 멤버에있는 visitorTotal은 지웟음



-- 게시판 종류 테이블 (PK)
ALTER TABLE "BOARD_TYPE" ADD CONSTRAINT "PK_BOARD_TYPE" PRIMARY KEY (
	"BOARD_CODE"
);

-- 회원 테이블 (PK)
ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_NO"
);

-- 게시글 좋아요 테이블 (복합 PK)
ALTER TABLE "BOARD_LIKE" ADD CONSTRAINT "PK_BOARD_LIKE" PRIMARY KEY (
	"MEMBER_NO",
	"BOARD_NO"
);

-- 일촌평 테이블 (복합 PK)
ALTER TABLE "ILCHON_COMMENT" ADD CONSTRAINT "PK_ILCHON_COMMENT" PRIMARY KEY (
	"FROM_MEMBER_NO",
	"TO_MEMBER_NO"
);

-- 프로필 테이블 (PK)
ALTER TABLE "PROFILE" ADD CONSTRAINT "PK_PROFILE" PRIMARY KEY (
	"MEMBER_NO"
);

-- 게시글 이미지 테이블 (PK)
ALTER TABLE "BOARD_IMG" ADD CONSTRAINT "PK_BOARD_IMG" PRIMARY KEY (
	"IMG_NO"
);

-- 방명록 테이블 (PK)
ALTER TABLE "GUEST_BOOK" ADD CONSTRAINT "PK_GUEST_BOOK" PRIMARY KEY (
	"GUEST_BOOK_NO"
);

-- 플레이리스트 테이블 (PK)
ALTER TABLE "PLAYLIST" ADD CONSTRAINT "PK_PLAYLIST" PRIMARY KEY (
	"MEMBER_NO"
);

-- 게시글 댓글 테이블 (PK)
ALTER TABLE "BOARD_COMMENT" ADD CONSTRAINT "PK_BOARD_COMMENT" PRIMARY KEY (
	"BOARD_COMMENT_NO"
);

-- 인증 번호 테이블 (PK)
ALTER TABLE "AUTH_KEY" ADD CONSTRAINT "PK_AUTH_KEY" PRIMARY KEY (
	"KEY_NO"
);

-- 게시글 테이블 (PK)
ALTER TABLE "BOARD" ADD CONSTRAINT "PK_BOARD" PRIMARY KEY (
	"BOARD_NO"
);

-- 일촌 테이블 (복합 PK)
ALTER TABLE "ILCHON" ADD CONSTRAINT "PK_ILCHON" PRIMARY KEY (
	"FROM_MEMBER_NO", 
	"TO_MEMBER_NO"
);

ALTER TABLE TODAY ADD CONSTRAINT TODAY_PK 
    PRIMARY KEY (HOME_NO, VISIT_NO, VISIT_DATE); -- 

-------------------------------------- FK --------------------------------------

  
-- 투데이 테이블 (FK)
ALTER TABLE TODAY ADD CONSTRAINT TODAY_HOME_FK 
    FOREIGN KEY (HOME_NO) REFERENCES MEMBER(MEMBER_NO);

ALTER TABLE TODAY ADD CONSTRAINT TODAY_VISITOR_FK 
    FOREIGN KEY (VISIT_NO) REFERENCES MEMBER(MEMBER_NO);

-- 게시판 종류 테이블 (FK)
ALTER TABLE "BOARD_TYPE" ADD CONSTRAINT "FK_MEMBER_TO_BOARD_TYPE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

-- 게시글 좋아요 테이블 (FK)
ALTER TABLE "BOARD_LIKE" ADD CONSTRAINT "FK_MEMBER_TO_BOARD_LIKE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "BOARD_LIKE" ADD CONSTRAINT "FK_BOARD_TO_BOARD_LIKE_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
) ON DELETE CASCADE;

-- 일촌평 테이블 (FK)
ALTER TABLE "ILCHON_COMMENT" ADD CONSTRAINT "FK_ILCHON_TO_ILCHON_COMMENT" FOREIGN KEY (
	"FROM_MEMBER_NO", "TO_MEMBER_NO"
)
REFERENCES "ILCHON" (
	"FROM_MEMBER_NO", "TO_MEMBER_NO"
) ON DELETE CASCADE;

-- 프로필 테이블 (FK)
ALTER TABLE "PROFILE" ADD CONSTRAINT "FK_MEMBER_TO_PROFILE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

-- 게시글 이미지 테이블 (FK)
ALTER TABLE "BOARD_IMG" ADD CONSTRAINT "FK_BOARD_TO_BOARD_IMG_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
) ON DELETE CASCADE;

-- 방명록 테이블 (FK)
ALTER TABLE "GUEST_BOOK" ADD CONSTRAINT "FK_MEMBER_TO_GUEST_BOOK_1" FOREIGN KEY (
	"OWNER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "GUEST_BOOK" ADD CONSTRAINT "FK_MEMBER_TO_GUEST_BOOK_2" FOREIGN KEY (
	"VISITOR_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

-- 플레이리스트 테이블 (FK)
ALTER TABLE "PLAYLIST" ADD CONSTRAINT "FK_MEMBER_TO_PLAYLIST_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

-- 게시글 댓글 테이블 (FK)
ALTER TABLE "BOARD_COMMENT" ADD CONSTRAINT "FK_BOARD_TO_BOARD_COMMENT_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
) ON DELETE CASCADE;

ALTER TABLE "BOARD_COMMENT" ADD CONSTRAINT "FK_MEMBER_TO_BOARD_COMMENT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "BOARD_COMMENT" ADD CONSTRAINT "FK_BOARD_COMMENT_TO_BOARD_COMMENT_1" FOREIGN KEY (
	"PARENT_COMMENT_NO"
)
REFERENCES "BOARD_COMMENT" (
	"BOARD_COMMENT_NO"
);

-- 게시글 테이블 (FK)
ALTER TABLE "BOARD" ADD CONSTRAINT "FK_BOARD_TYPE_TO_BOARD_1" FOREIGN KEY (
	"BOARD_CODE"
)
REFERENCES "BOARD_TYPE" (
	"BOARD_CODE"
) ON DELETE CASCADE;

ALTER TABLE "BOARD" ADD CONSTRAINT "FK_MEMBER_TO_BOARD_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

-- 일촌 테이블 (FK)
ALTER TABLE "ILCHON" ADD CONSTRAINT "FK_MEMBER_TO_ILCHON_1" FOREIGN KEY (
	"FROM_MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "ILCHON" ADD CONSTRAINT "FK_MEMBER_TO_ILCHON_2" FOREIGN KEY (
	"TO_MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

------------------------------------ CHECK -------------------------------------

-- 회원 탈퇴 여부 (CK)
ALTER TABLE "MEMBER" ADD CONSTRAINT "MEMBER_DEL_FL_CHECK" CHECK (
	"MEMBER_DEL_FL" IN ('Y', 'N')
);

-- 게시글 댓글 삭제 여부 (CK)
ALTER TABLE "BOARD_COMMENT" ADD CONSTRAINT "BOARD_COMMENT_DEL_FL_CHECK" CHECK (
	"BOARD_COMMENT_DEL_FL" IN ('Y', 'N')
);

-- 게시글 삭제 여부 (CK)
ALTER TABLE "BOARD" ADD CONSTRAINT "BOARD_DEL_FL_CHECK" CHECK (
	"BOARD_DEL_FL" IN ('Y', 'N')
);

-- 일촌 여부 (CK)
ALTER TABLE "ILCHON" ADD CONSTRAINT "IS_ILCHON" CHECK (
	"IS_ILCHON" IN ('Y', 'N')
);


SELECT * FROM ILCHON;

SELECT BOARD_CODE "boardCode", BOARD_NAME "boardName"
		FROM "BOARD_TYPE"
		ORDER BY BOARD_CODE;

SELECT * FROM BOARD_COMMENT;

SELECT LEVEL, C.* FROM
	(SELECT BOARD_COMMENT_NO, BOARD_COMMENT_CONTENT,
	    TO_CHAR(BOARD_COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') BOARD_COMMENT_WRITE_DATE,
	    BOARD_NO, MEMBER_NO, MEMBER_NAME, MEMBER_IMG, PARENT_COMMENT_NO, BOARD_COMMENT_DEL_FL
	FROM "BOARD_COMMENT"
	JOIN MEMBER USING(MEMBER_NO)
	WHERE BOARD_NO = 1) C
WHERE BOARD_COMMENT_DEL_FL = 'N'
OR 0 != (SELECT COUNT(*) FROM "BOARD_COMMENT" SUB
				WHERE SUB.PARENT_COMMENT_NO = C.BOARD_COMMENT_NO
				AND BOARD_COMMENT_DEL_FL = 'N') -- 부모는 삭제되었어도 자식댓글이 살아있는 것
START WITH PARENT_COMMENT_NO IS NULL -- 본인이 부모인 애
CONNECT BY PRIOR BOARD_COMMENT_NO = PARENT_COMMENT_NO -- 부모자식간에 떨어져있어도 연결해주겠다 ㄴ 형식으로 엮이게
ORDER SIBLINGS BY BOARD_COMMENT_NO -- 부모 자식간에 묶고, 같은 레벨끼리 정렬하고 코멘트 번호 순서대로 정렬
;

-- 댓글 샘플
INSERT INTO "BOARD_COMMENT"	
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '부모 댓글 1',
			  DEFAULT, DEFAULT,	1, 1, NULL);

INSERT INTO "BOARD_COMMENT"	
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '부모 댓글 2',
			  DEFAULT, DEFAULT,	1, 1, NULL);

INSERT INTO "BOARD_COMMENT"
VALUES(SEQ_BOARD_COMMENT_NO.NEXTVAL, '허배령 댓글',
			 DEFAULT, DEFAULT, 1, 11, NULL);

SELECT * FROM "BOARD_COMMENT"
ORDER BY BOARD_COMMENT_NO DESC;

SELECT * FROM "BOARD";
SELECT * FROM "MEMBER";

-- 대댓글 샘플
INSERT INTO "BOARD_COMMENT"
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '부모 1의 자식 1',
			  DEFAULT, DEFAULT,	1, 1, 1);

INSERT INTO "BOARD_COMMENT"
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '부모 1의 자식 2',
			  DEFAULT, DEFAULT,	1, 1, 1);

INSERT INTO "BOARD_COMMENT"
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '부모 2의 자식 1',
			  DEFAULT, DEFAULT,	1997, 2, 2023);



SELECT * FROM MEMBER;

SELECT * FROM board_type;



INSERT INTO "BOARD"
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '허배령 샘플1' , '샘플 게시글이에요', DEFAULT, DEFAULT, DEFAULT, DEFAULT, 10, 11);

INSERT INTO "BOARD"
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '허배령 샘플' , '샘플 게시글이에요', DEFAULT, DEFAULT, DEFAULT, DEFAULT, 8, 11);

INSERT INTO "BOARD"
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '허배령 샘플2' , '샘플 게시글이에요2', DEFAULT, DEFAULT, DEFAULT, DEFAULT, 8, 11);

INSERT INTO "BOARD"
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '허배령 샘플3' , '샘플 게시글이에요3', DEFAULT, DEFAULT, DEFAULT, DEFAULT, 8, 11);

INSERT INTO "BOARD"
VALUES( SEQ_BOARD_COMMENT_NO.NEXTVAL, '허배령 샘플4' , '샘플 게시글이에요4', DEFAULT, DEFAULT, DEFAULT, DEFAULT, 8, 11);

SELECT* FROM GUEST_BOOK;

INSERT INTO "GUEST_BOOK"
VALUES( 9, '허배령 방명록 샘플', DEFAULT, 11, 1);

SELECT * FROM BOARD_IMG;

/* BOARD_IMG 테이블에 샘플 데이터 삽입 */
INSERT INTO "BOARD_IMG" VALUES(
	SEQ_IMG_NO.NEXTVAL, '/images/board/', '원본1.jpg', 'test1.jpg', 0, 15
);

INSERT INTO "BOARD_IMG" VALUES(
	SEQ_IMG_NO.NEXTVAL, '/images/board/', '원본2.jpg', 'test2.jpg', 1, 15
);

INSERT INTO "BOARD_IMG" VALUES(
	SEQ_IMG_NO.NEXTVAL, '/images/board/', '원본3.jpg', 'test3.jpg', 2, 15
);

INSERT INTO "BOARD_IMG" VALUES(
	SEQ_IMG_NO.NEXTVAL, '/images/board/', '원본4.jpg', 'test4.jpg', 3, 15
);

INSERT INTO "BOARD_IMG" VALUES(
	SEQ_IMG_NO.NEXTVAL, '/images/board/', '원본5.jpg', 'test5.jpg', 4, 15
);



DELETE FROM BOARD_IMG;

SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_CODE, READ_COUNT,
MEMBER_NO, MEMBER_NAME, MEMBER_IMG,
TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_UPDATE_DATE,

(SELECT COUNT(*)
FROM "BOARD_LIKE"
WHERE BOARD_NO = 15) LIKE_COUNT,

(SELECT IMG_PATH || IMG_RENAME
FROM "BOARD_IMG"
WHERE BOARD_NO = 15
AND IMG_ORDER = 0) THUMBNAIL,

(SELECT COUNT(*)
FROM "BOARD_LIKE"
WHERE BOARD_NO = 15
AND MEMBER_NO = 2) LIKE_CHECK

FROM "BOARD"
JOIN "MEMBER" USING(MEMBER_NO)
WHERE BOARD_DEL_FL = 'N'
AND BOARD_NO = 15
AND BOARD_CODE = 8;

SELECT * FROM
"BOARD_IMG"
WHERE BOARD_NO = 15
ORDER BY IMG_ORDER;