<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.featherworld.project.miniHome.model.mapper.MiniHomeMapper">
		
<!-- 일촌관계확인 (양방향) -->
    <select id="findIlchon" parameterType="Ilchon" resultType="_int">
        SELECT COUNT(*) 
        FROM ILCHON 
        WHERE IS_ILCHON = 'Y'
        AND (
            (FROM_MEMBER_NO = #{fromMemberNo} AND TO_MEMBER_NO = #{toMemberNo})
            OR 
            (FROM_MEMBER_NO = #{toMemberNo} AND TO_MEMBER_NO = #{fromMemberNo})
        )
    </select>

	<!-- ==================== 일촌평 관련 ==================== -->
	
<!-- 일촌평 조회: 해당 페이지에 작성된 모든 일촌평 - DTO 필드명에 맞게 수정 -->
<select id="getIlchonComments" parameterType="int" resultType="Ilchon">
SELECT
    CASE 
        WHEN i.TO_MEMBER_NO = #{memberNo} AND i.FROM_COMMENT IS NOT NULL
        THEN i.FROM_MEMBER_NO
        WHEN i.FROM_MEMBER_NO = #{memberNo} AND i.TO_COMMENT IS NOT NULL
        THEN i.TO_MEMBER_NO
    END as actualAuthorNo,
    
    #{memberNo} as toMemberNo,
    
    CASE 
        WHEN i.TO_MEMBER_NO = #{memberNo} AND i.FROM_COMMENT IS NOT NULL
        THEN from_member.MEMBER_NAME
        WHEN i.FROM_MEMBER_NO = #{memberNo} AND i.TO_COMMENT IS NOT NULL
        THEN to_member.MEMBER_NAME
    END as memberName,
    
    CASE 
        WHEN i.TO_MEMBER_NO = #{memberNo} AND i.FROM_COMMENT IS NOT NULL
        THEN i.FROM_COMMENT
        WHEN i.FROM_MEMBER_NO = #{memberNo} AND i.TO_COMMENT IS NOT NULL
        THEN i.TO_COMMENT
    END as fromComment,
    
     CASE
        WHEN i.TO_MEMBER_NO = #{memberNo} AND i.FROM_COMMENT IS NOT NULL
        THEN from_member.MEMBER_IMG
        WHEN i.FROM_MEMBER_NO = #{memberNo} AND i.TO_COMMENT IS NOT NULL
        THEN to_member.MEMBER_IMG
    END as fromMemberImg

FROM ILCHON i
LEFT JOIN MEMBER from_member ON i.FROM_MEMBER_NO = from_member.MEMBER_NO
LEFT JOIN MEMBER to_member ON i.TO_MEMBER_NO = to_member.MEMBER_NO

WHERE i.IS_ILCHON = 'Y'
AND (
    (i.TO_MEMBER_NO = #{memberNo} AND i.FROM_COMMENT IS NOT NULL)
    OR 
    (i.FROM_MEMBER_NO = #{memberNo} AND i.TO_COMMENT IS NOT NULL)
)
</select>
			
	<!-- FROM_COMMENT 업데이트 -->
    <update id="updateIlchonFromComment" parameterType="Ilchon">
        UPDATE ILCHON 
        SET FROM_COMMENT = #{fromComment}
        WHERE FROM_MEMBER_NO = #{fromMemberNo} 
          AND TO_MEMBER_NO = #{toMemberNo}
          AND IS_ILCHON = 'Y'
    </update>

	
    <!-- TO_COMMENT 업데이트 -->
    <update id="updateIlchonToComment" parameterType="Ilchon">
        UPDATE ILCHON 
        SET TO_COMMENT = #{toComment}
        WHERE FROM_MEMBER_NO = #{fromMemberNo} 
          AND TO_MEMBER_NO = #{toMemberNo}
          AND IS_ILCHON = 'Y'
    </update>

	  <!-- FROM_COMMENT 삭제 -->
    <update id="deleteIlchonFromComment" parameterType="Ilchon">
        UPDATE ILCHON 
        SET FROM_COMMENT = NULL
        WHERE FROM_MEMBER_NO = #{fromMemberNo} 
          AND TO_MEMBER_NO = #{toMemberNo}
          AND IS_ILCHON = 'Y'
          AND FROM_COMMENT IS NOT NULL
    </update>

	 <!-- TO_COMMENT 삭제 -->
    <update id="deleteIlchonToComment" parameterType="Ilchon">
        UPDATE ILCHON 
        SET TO_COMMENT = NULL
        WHERE FROM_MEMBER_NO = #{fromMemberNo} 
          AND TO_MEMBER_NO = #{toMemberNo}
          AND IS_ILCHON = 'Y'
          AND TO_COMMENT IS NOT NULL
    </update>

	<!-- ==================== 나머지 기존 메서드들 ==================== -->
		
	<select id="findmember" parameterType="_int" resultType="Member">
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_EMAIL, MEMBER_IMG,
			   MEMBER_INTRO, HOME_TITLE
		FROM MEMBER 
		WHERE MEMBER_NO = #{memberNo}
		  AND MEMBER_DEL_FL = 'N'
	</select>
		
	<!-- 방문자 기록 추가 -->
	<insert id="todayAdd" parameterType="Today">
		INSERT INTO TODAY (HOME_NO, VISIT_NO, VISIT_DATE)
		VALUES (#{homeNo}, #{visitNo}, TRUNC(SYSDATE))
	</insert>	
	
	<!-- 오늘 특정 미니홈에 방문했는지 확인 -->
	<select id="todayConfirm" parameterType="Today" resultType="_int">
		SELECT COUNT(*)
		FROM TODAY
		WHERE HOME_NO = #{homeNo}
		  AND VISIT_NO = #{visitNo}
		  AND VISIT_DATE = TRUNC(SYSDATE)
	</select>
	
	<!-- 특정 미니홈의 오늘 총 방문자 수 조회 -->
	<select id="todayCount" parameterType="Today" resultType="_int">
		SELECT COUNT(*)
		FROM TODAY
		WHERE HOME_NO = #{homeNo}
		  AND VISIT_DATE = TRUNC(SYSDATE)
	</select>
	
	<!-- 특정 미니홈의 전체 방문자수 -->
	<select id="totalCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM TODAY
		WHERE HOME_NO = #{memberNo}
	</select>
	
	<!-- 팔로워 수 조회 -->
	<select id="getFollowerCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM ILCHON
		WHERE TO_MEMBER_NO = #{memberNo}
		  AND IS_ILCHON = 'Y'
	</select>

	<!-- 팔로잉 수 조회 -->
	<select id="getFollowingCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM ILCHON
		WHERE FROM_MEMBER_NO = #{memberNo}
		  AND IS_ILCHON = 'Y'
	</select>
	
	<!-- 미수락 팔로워 신청 수 조회 -->
	<select id="getPendingFollowerCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM ILCHON
		WHERE TO_MEMBER_NO = #{memberNo}
		  AND IS_ILCHON = 'N'
	</select>
	
	<!-- 일촌 신청 보내기 -->
	<insert id="sendFollowRequest" parameterType="Ilchon">
		INSERT INTO ILCHON (
			FROM_MEMBER_NO, 
			TO_MEMBER_NO, 
			FROM_NICKNAME, 
			TO_NICKNAME, 
			IS_ILCHON,
			FROM_COMMENT,
			TO_COMMENT
		) VALUES (
			#{fromMemberNo},
			#{toMemberNo},
			#{fromNickname},
			#{toNickname},
			'N',
			NULL,
			NULL
		)
	</insert>

	<!-- 대기중인 일촌 신청 조회 -->
	<select id="findPendingIlchon" parameterType="Ilchon" resultType="int">
		SELECT COUNT(*)
		FROM ILCHON
		WHERE FROM_MEMBER_NO = #{fromMemberNo}
		  AND TO_MEMBER_NO = #{toMemberNo}
		  AND IS_ILCHON = 'N'
	</select>
	 
	<!-- 최근 게시글 목록 조회 -->
	<select id="getRecentBoards" parameterType="map" resultType="Board">
	SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CODE,
    (SELECT IMG_PATH || IMG_RENAME
     FROM BOARD_IMG BI
     WHERE B.BOARD_NO = BI.BOARD_NO
     AND IMG_ORDER = 0) AS THUMBNAIL
	FROM BOARD B
	WHERE B.MEMBER_NO = #{memberNo}
	AND B.BOARD_DEL_FL = 'N'
	AND B.BOARD_CODE IN (SELECT BT.BOARD_CODE
						FROM BOARD_TYPE BT
						<if test="loginMemberNo != memberNo">
							WHERE AUTHORITY = 0
						</if>)
	ORDER BY B.BOARD_NO DESC
	FETCH FIRST 6 ROWS ONLY
	</select>
		
	<!-- 총 게시글 수 조회 -->
	<select id="getTotalBoardCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE BOARD.MEMBER_NO = #{memberNo}
		  AND BOARD.BOARD_CODE IN (SELECT BOARD_CODE
		                          FROM BOARD_TYPE
		                          <if test="loginMemberNo != memberNo">
		                          	WHERE AUTHORITY = 0
								  </if>)
		  AND BOARD_DEL_FL = 'N'
	</select>
  		
	<!-- 총 방명록 수 조회 -->
	<select id="getTotalGuestBookCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM GUEST_BOOK
		WHERE OWNER_NO = #{memberNo}
		-- 로그인 했는데 주인장인 경우 다 보여줌
		  <if test="loginMemberNo != memberNo">
		  	-- 로그인 안 한 경우 SECRET = 0만 탐
		  	-- 로그인 했는데 VISITOR_NO가 아닌 경우 SECRET = 0만 탐
		  	-- 로그인 했으면서 VISITOR_NO인 경우만 다 보여줌
			AND (SECRET = 0 OR VISITOR_NO = #{loginMemberNo})
		  </if>
	</select>
	
	<!--  왼쪽 프로필 이미지만! 바꾸는  -->
	<update id="leftprofileUpdate">
		UPDATE MEMBER SET
		MEMBER_IMG = #{memberImg}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 왼쪽 프로필 bio 만 update -->
	<update id="leftprofileintroUpdate">
		UPDATE MEMBER SET
		MEMBER_INTRO = #{memberIntro}
		WHERE MEMBER_NO = #{memberNo}
	</update>
		
	<!--  랜덤으로 미니홈 다이브 -->
	<select id="getRandomActiveMember" resultType="Integer">
    SELECT MEMBER_NO 
    FROM (
        SELECT MEMBER_NO 
        FROM MEMBER 
        WHERE MEMBER_DEL_FL = 'N'
        ORDER BY DBMS_RANDOM.VALUE
    ) 
    WHERE ROWNUM = 1
	</select>
	
	<update id="deleteMemberImage" parameterType="int">
    UPDATE MEMBER 
    SET MEMBER_IMG = NULL
    WHERE MEMBER_NO = #{memberNo}
    AND MEMBER_DEL_FL = 'N'
   </update>
	
	

</mapper>