<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.featherworld.project.board.model.mapper.BoardMapper">
	
	<!-- 현재 회원의 게시판 종류 번호 조회 -->
	<select id="selectBoardType" resultType="BoardType">
		SELECT BOARD_CODE, BOARD_NAME, AUTHORITY
		FROM BOARD_TYPE
		WHERE MEMBER_NO = ${memberNo}
		ORDER BY BOARD_CODE
	</select>
	
	<!-- 해당 게시판의 삭제되지 않은 총 게시글 개수(listCount) 조회 -->
	<select id="getListCount"  resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE BOARD_CODE = ${currentBoardCode}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<!-- 게시글 목록 조회 -->
	<select id="selectBoardList" resultType="Board">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD') AS BOARD_WRITE_DATE, READ_COUNT
		FROM BOARD
		WHERE BOARD_CODE = ${currentBoardCode}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO DESC
	</select>

	<!-- 새로운 게시판 생성 -->
	<insert id="insertBoardType" parameterType="BoardType">
		INSERT INTO BOARD_TYPE
		VALUES(SEQ_BOARD_CODE_NO.NEXTVAL, #{boardName}, ${authority}, ${memberNo})
	</insert>

	<!-- 기존 게시판 삭제 -->
	<delete id="deleteBoardType" parameterType="BoardType">
		DELETE FROM BOARD_TYPE
		WHERE BOARD_CODE = ${boardCode}
		AND MEMBER_NO = ${memberNo}
	</delete>
	
<select id="selectOne" parameterType="map" resultType="Board">
    SELECT 
      B.BOARD_NO,
      B.BOARD_TITLE,
      B.BOARD_CONTENT,
      TO_CHAR(B.BOARD_WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS boardWriteDate,
      TO_CHAR(B.BOARD_UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS boardUpdateDate,
      B.READ_COUNT,
      B.MEMBER_NO,
      M.MEMBER_NAME AS memberName,
      M.MEMBER_IMG AS memberImg,

      -- 좋아요 수 (서브쿼리)
      (SELECT COUNT(*) 
       FROM BOARD_LIKE 
       WHERE BOARD_NO = B.BOARD_NO) AS likeCount,

      -- 로그인 회원이 좋아요 눌렀는지 확인 (map에 memberNo가 있으면 체크)
      (SELECT COUNT(*) 
       FROM BOARD_LIKE 
       WHERE BOARD_NO = B.BOARD_NO 
         <if test="memberNo != null">
           AND MEMBER_NO = #{memberNo}
         </if>
      ) AS likeCheck

    FROM BOARD B
    JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO

    WHERE B.BOARD_NO = #{boardNo}
      AND B.BOARD_CODE = #{boardCode}
  </select>
	
	
  
	<!-- 좋아요 해제 -->
	<delete id="deleteBoardLike">
		DELETE FROM "BOARD_LIKE"
		WHERE MEMBER_NO = #{memberNo}
		AND BOARD_NO = #{boardNo}
	</delete>
	
	<!-- 좋아요 체크 -->
	<insert id="insertBoardLike">
		INSERT INTO "BOARD_LIKE"
		VALUES(#{memberNo}, #{boardNo})
	</insert>
	
	<!-- 게시글 좋아요 개수 조회 -->
	<select id="selectLikeCount">
		SELECT COUNT(*) FROM "BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo}
	</select>
</mapper>
