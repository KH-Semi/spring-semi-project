<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.featherworld.project.board.model.mapper.BoardMapper">
	
	<!-- 현재 회원의 게시판 종류 번호 조회 -->
	<select id="selectBoardType" resultType="BoardType">
		SELECT BOARD_CODE, BOARD_NAME, AUTHORITY
		FROM BOARD_TYPE
		WHERE MEMBER_NO = ${memberNo}
		ORDER BY BOARD_CODE
	</select>
	
	<!-- 해당 게시판의 삭제되지 않은 총 게시글 개수(listCount) 조회 -->
	<select id="getListCount"  resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE BOARD_CODE = ${currentBoardCode}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<!-- 게시글 목록 조회 -->
	<select id="selectBoardList" resultType="Board">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD') AS BOARD_WRITE_DATE, READ_COUNT, MEMBER_NO
		FROM BOARD
		WHERE BOARD_CODE = ${currentBoardCode}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO DESC
	</select>

	<!-- 새로운 게시판 생성 -->
	<insert id="insertBoardType" parameterType="BoardType">
		INSERT INTO BOARD_TYPE
		VALUES(SEQ_BOARD_CODE_NO.NEXTVAL, #{boardName}, ${authority}, ${memberNo})
	</insert>

	<!-- 기존 게시판 삭제 -->
	<delete id="deleteBoardType" parameterType="BoardType">
		DELETE FROM BOARD_TYPE
		WHERE BOARD_CODE = ${boardCode}
		AND MEMBER_NO = ${memberNo}
	</delete>

	<update id="updateBoardType" parameterType="BoardType">
		UPDATE BOARD_TYPE
		SET BOARD_NAME = #{boardName}, AUTHORITY = ${authority}
		WHERE BOARD_CODE = ${boardCode}
		AND MEMBER_NO = ${memberNo}
	</update>
	
	<!-- 게시글 상세 조회 -->
	<select id="selectOne" parameterType="map" resultType="Board">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_CODE, READ_COUNT,
		MEMBER_NO, MEMBER_NAME, MEMBER_IMG,
		TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
		TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_UPDATE_DATE,
		
		(SELECT COUNT(*)
		FROM "BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo} ) LIKE_COUNT,
		
		(SELECT IMG_PATH || IMG_RENAME
		FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER = 0) THUMBNAIL,
		
		(SELECT COUNT(*)
		FROM "BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo} ) LIKE_CHECK
		
		FROM "BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_NO = #{boardNo}
		AND BOARD_CODE = #{boardCode}
	  </select>
  
	<!-- 좋아요 해제 -->
	<delete id="deleteBoardLike">
		DELETE FROM "BOARD_LIKE"
		WHERE MEMBER_NO = #{memberNo}
		AND BOARD_NO = #{boardNo}
	</delete>
	
	<!-- 좋아요 체크 -->
	<insert id="insertBoardLike">
		INSERT INTO "BOARD_LIKE"
		VALUES(#{memberNo}, #{boardNo})
	</insert>
	
	<!-- 게시글 좋아요 개수 조회 -->
	<select id="selectLikeCount">
		SELECT COUNT(*) FROM "BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
		<resultMap type="Board" id="board_rm">
	 
		<id property="boardNo" column="BOARD_NO"/>
		
		<!-- 해당 게시글 이미지 목록 조회 후 필드에 저장 -->
		<collection 
		property="imageList"
		select="selectImageList"
		column="BOARD_NO"
		javaType="java.util.ArrayList"
		ofType="BoardImg"
		/>
		
		<!-- 해당 게시글 댓글 목록 조회 후 필드에 저장 -->
		<collection 
		property="commentList"
		select="selectCommentList"
		column="BOARD_NO"
		javaType="java.util.ArrayList"
		ofType="Comment"
		/>
		
	 </resultMap>

	<!-- 상세 조회한 게시글의 이미지 목록 조회 -->
	<select id="selectImageList" resultType="BoardImg">
		SELECT * FROM
		"BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		ORDER BY IMG_ORDER
	</select>
	
	<!-- 상세 조회한 게시글의 댓글 목록 확인 -->
	<select id="selectCommentList" resultType="Comment">
		SELECT LEVEL, C.* FROM
			(SELECT BOARD_COMMENT_NO, BOARD_COMMENT_CONTENT,
			 TO_CHAR(BOARD_COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') BOARD_COMMENT_WRITE_DATE,
			 BOARD_NO, MEMBER_NO, MEMBER_NAME, MEMBER_IMG, PARENT_COMMENT_NO, BOARD_COMMENT_DEL_FL
		FROM "BOARD_COMMENT"
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo}) C
		WHERE BOARD_COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "BOARD_COMMENT" SUB
				 WHERE SUB.PARENT_COMMENT_NO = C.BOARD_COMMENT_NO
				 AND BOARD_COMMENT_DEL_FL = 'N') 
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR BOARD_COMMENT_NO = PARENT_COMMENT_NO 
		ORDER SIBLINGS BY BOARD_COMMENT_NO
	</select> 

	<!-- 조회 수 1 증가 -->
	<update id="updateReadCount">
		UPDATE "BOARD" SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 조회 수 조회 -->
	<select id="selectReadCount">
		SELECT READ_COUNT
		FROM "BOARD"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
		<!-- DB 이미지 파일명 목록 조회 -->
	<select id="selectDbImageList">
		SELECT SUBSTR(MEMBER_IMG, 
		INSTR(MEMBER_IMG, '/', -1) +1 ) AS "rename"
		FROM "MEMBER"
		WHERE MEMBER_IMG IS NOT NULL
		UNION
		SELECT CAST(IMG_RENAME AS VARCHAR2(300)) "rename"
		FROM "BOARD_IMG"
	</select>
	
</mapper>
